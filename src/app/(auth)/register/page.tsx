// src/app/(auth)/register/page.tsx (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)

"use client";

import React, { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import Link from "next/link";
import { useAuth } from "@/hooks/useAuth";
import { UserRole } from "@/types";
import { toast } from "react-toastify";
import {
  CheckCircle,
  Clock,
  AlertCircle,
  Wrench,
  Users,
  UserCheck,
  User,
} from "lucide-react";

export default function RegisterPage() {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [role, setRole] = useState<UserRole>(UserRole.REQUESTER);
  const [specialization, setSpecialization] = useState("");
  const [phone, setPhone] = useState("");
  const [errorMessage, setErrorMessage] = useState("");
  const [isFirstUser, setIsFirstUser] = useState(false);
  const [registrationSuccess, setRegistrationSuccess] = useState(false);
  const [registeredRole, setRegisteredRole] = useState<UserRole | null>(null);

  const { register, error, clearError, loading } = useAuth();
  const router = useRouter();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≤ —Å–∏—Å—Ç–µ–º–µ
  useEffect(() => {
    const checkFirstUser = async () => {
      try {
        const response = await fetch("/api/check-admins");
        const data = await response.json();
        setIsFirstUser(data.isFirstUser);

        // –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å—Ä–∞–∑—É —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–ª—å SUPER_ADMIN
        if (data.isFirstUser) {
          setRole(UserRole.SUPER_ADMIN);
        }
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:", error);
      }
    };

    checkFirstUser();
  }, []);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setErrorMessage("");
    clearError();

    if (password !== confirmPassword) {
      setErrorMessage("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç");
      return;
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è —Ç–µ—Ö–Ω–∏–∫–æ–≤
    if (role === UserRole.TECHNICIAN && !specialization.trim()) {
      setErrorMessage("–î–ª—è —Ç–µ—Ö–Ω–∏–∫–æ–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏");
      return;
    }

    try {
      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–ª—å—é
      await register(
        name,
        email,
        password,
        role,
        role === UserRole.TECHNICIAN ? specialization : undefined,
        phone || undefined
      );

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      setRegistrationSuccess(true);
      setRegisteredRole(role);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      if (isFirstUser || role === UserRole.SUPER_ADMIN) {
        toast.success("üéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.", {
          position: "top-center",
          autoClose: 5000,
        });

        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          router.push("/login?registered=true&activated=true");
        }, 3000);
      } else {
        toast.info("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞.", {
          position: "top-center",
          autoClose: 7000,
        });

        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
          router.push("/login?registered=true&activation=pending");
        }, 5000);
      }
    } catch (error) {
      const message =
        error instanceof Error ? error.message : "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏";
      setErrorMessage(message);
      toast.error(`–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${message}`);
    }
  };

  // –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (registrationSuccess) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-100">
        <div className="w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md text-center">
          {isFirstUser || registeredRole === UserRole.SUPER_ADMIN ? (
            // –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∞–≤—Ç–æ–∞–∫—Ç–∏–≤–∞—Ü–∏—è)
            <>
              <div className="flex justify-center">
                <CheckCircle className="h-16 w-16 text-green-500" />
              </div>
              <h1 className="text-2xl font-bold text-gray-900">
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!
              </h1>
              <div className="space-y-3">
                <p className="text-gray-600">
                  –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏
                  –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.
                </p>
                <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                  <p className="text-sm text-green-800">
                    <strong>–ò–º—è:</strong> {name}
                    <br />
                    <strong>Email:</strong> {email}
                    <br />
                    <strong>–†–æ–ª—å:</strong> –°—É–ø–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
                  </p>
                </div>
                <p className="text-sm text-gray-500">
                  –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞...
                </p>
              </div>
            </>
          ) : (
            // –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω—É–∂–Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—è)
            <>
              <div className="flex justify-center">
                <Clock className="h-16 w-16 text-amber-500" />
              </div>
              <h1 className="text-2xl font-bold text-gray-900">
                –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!
              </h1>
              <div className="space-y-3">
                <p className="text-gray-600">
                  –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
                  –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.
                </p>
                <div className="bg-amber-50 border border-amber-200 rounded-lg p-4">
                  <div className="flex items-center gap-2 mb-2">
                    <AlertCircle className="h-4 w-4 text-amber-600" />
                    <span className="text-sm font-medium text-amber-800">
                      –ß—Ç–æ –¥–∞–ª—å—à–µ?
                    </span>
                  </div>
                  <ul className="text-sm text-amber-700 space-y-1 text-left">
                    <li>
                      ‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–∞—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                    </li>
                    <li>‚Ä¢ –ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ</li>
                    <li>‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç</li>
                  </ul>
                </div>
                <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
                  <p className="text-sm text-gray-600">
                    <strong>–ò–º—è:</strong> {name}
                    <br />
                    <strong>Email:</strong> {email}
                    <br />
                    <strong>–†–æ–ª—å:</strong> {getRoleDisplayName(registeredRole!)}
                    {registeredRole === UserRole.TECHNICIAN &&
                      specialization && (
                        <>
                          <br />
                          <strong>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</strong> {specialization}
                        </>
                      )}
                  </p>
                </div>
                <p className="text-sm text-gray-500">
                  –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞...
                </p>
              </div>
            </>
          )}

          <div className="pt-4">
            <Link
              href="/login"
              className="inline-flex items-center gap-2 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors"
            >
              –ü–µ—Ä–µ–π—Ç–∏ –∫–æ –≤—Ö–æ–¥—É
            </Link>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-100">
      <div className="w-full max-w-md p-8 space-y-8 bg-white rounded-lg shadow-md">
        <div className="text-center">
          <h1 className="text-3xl font-extrabold text-gray-900">
            –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ
          </h1>
          <p className="mt-2 text-sm text-gray-600">
            –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–µ –∑–∞—è–≤–æ–∫ –Ω–∞ —Ä–µ–º–æ–Ω—Ç
          </p>
        </div>

        {!isFirstUser && role !== UserRole.SUPER_ADMIN && (
          <div className="bg-amber-50 border border-amber-200 rounded-lg p-4">
            <div className="flex items-center gap-2">
              <AlertCircle className="h-4 w-4 text-amber-600 flex-shrink-0" />
              <p className="text-sm text-amber-800">
                <strong>–í–∞–∂–Ω–æ:</strong> –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –¥–æ–ª–∂–µ–Ω
                –±—ã—Ç—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º
                –≤—Ö–æ–¥–æ–º –≤ —Å–∏—Å—Ç–µ–º—É.
              </p>
            </div>
          </div>
        )}

        <form
          className="mt-8 space-y-6"
          onSubmit={handleSubmit}
          autoComplete="off"
        >
          {(error || errorMessage) && (
            <div className="p-4 text-red-700 bg-red-100 border border-red-200 rounded-md">
              {errorMessage || error}
            </div>
          )}

          <div>
            <label
              htmlFor="name"
              className="block text-sm font-medium text-gray-700"
            >
              –ü–æ–ª–Ω–æ–µ –∏–º—è
            </label>
            <input
              id="name"
              type="text"
              value={name}
              onChange={(e) => setName(e.target.value)}
              required
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è"
            />
          </div>

          <div>
            <label
              htmlFor="email"
              className="block text-sm font-medium text-gray-700"
            >
              Email
            </label>
            <input
              id="email"
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
              autoComplete="off"
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
              placeholder="example@company.com"
            />
          </div>

          <div>
            <label
              htmlFor="password"
              className="block text-sm font-medium text-gray-700"
            >
              –ü–∞—Ä–æ–ª—å
            </label>
            <input
              id="password"
              type="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
              autoComplete="off"
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
              placeholder="–ú–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤"
            />
          </div>

          <div>
            <label
              htmlFor="confirmPassword"
              className="block text-sm font-medium text-gray-700"
            >
              –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
            </label>
            <input
              id="confirmPassword"
              type="password"
              value={confirmPassword}
              onChange={(e) => setConfirmPassword(e.target.value)}
              required
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
              placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
            />
          </div>

          {!isFirstUser ? (
            <div>
              <label
                htmlFor="role"
                className="block text-sm font-medium text-gray-700"
              >
                –†–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ
              </label>
              <select
                id="role"
                value={role}
                onChange={(e) => setRole(e.target.value as UserRole)}
                className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
              >
                <option value={UserRole.REQUESTER}>
                  –ó–∞—è–≤–∏—Ç–µ–ª—å (–ø–æ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫)
                </option>
                <option value={UserRole.TECHNICIAN}>
                  –¢–µ—Ö–Ω–∏–∫ (–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç)
                </option>
                <option value={UserRole.MANAGER}>
                  –ú–µ–Ω–µ–¥–∂–µ—Ä (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏)
                </option>
              </select>
              <div className="mt-1 text-xs text-gray-500">
                <RoleDescription role={role} />
              </div>
            </div>
          ) : (
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
              <div className="flex items-center gap-2">
                <CheckCircle className="h-4 w-4 text-blue-600" />
                <p className="text-sm text-blue-800">
                  –í—ã –±—É–¥–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫{" "}
                  <strong>—Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</strong> –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                  –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã (–ø–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º—ã).
                </p>
              </div>
            </div>
          )}

          {/* –ü–æ–ª—è –¥–ª—è —Ç–µ—Ö–Ω–∏–∫–æ–≤ */}
          {role === UserRole.TECHNICIAN && (
            <div className="space-y-4 p-4 bg-green-50 border border-green-200 rounded-lg">
              <h4 className="text-sm font-medium text-green-800 flex items-center">
                <Wrench className="h-4 w-4 mr-1" />
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ç–µ—Ö–Ω–∏–∫–∞
              </h4>
              <div>
                <label
                  htmlFor="specialization"
                  className="block text-sm font-medium text-gray-700"
                >
                  –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è *
                </label>
                <input
                  id="specialization"
                  type="text"
                  value={specialization}
                  onChange={(e) => setSpecialization(e.target.value)}
                  required={role === UserRole.TECHNICIAN}
                  className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                  placeholder="–≠–ª–µ–∫—Ç—Ä–∏–∫, —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫, –º–∞–ª—è—Ä..."
                />
              </div>
            </div>
          )}

          {/* –¢–µ–ª–µ—Ñ–æ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) */}
          <div>
            <label
              htmlFor="phone"
              className="block text-sm font-medium text-gray-700"
            >
              –¢–µ–ª–µ—Ñ–æ–Ω (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
            </label>
            <input
              id="phone"
              type="tel"
              value={phone}
              onChange={(e) => setPhone(e.target.value)}
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
              placeholder="+7 (999) 123-45-67"
            />
          </div>

          <div>
            <button
              type="submit"
              disabled={loading}
              className="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400 disabled:cursor-not-allowed"
            >
              {loading ? "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è..." : "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"}
            </button>
          </div>

          <div className="text-center text-sm">
            <p>
              –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{" "}
              <Link
                href="/login"
                className="font-medium text-indigo-600 hover:text-indigo-500"
              >
                –í–æ–π—Ç–∏
              </Link>
            </p>
          </div>
        </form>
      </div>
    </div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–ø–∏—Å–∞–Ω–∏—è —Ä–æ–ª–∏
function RoleDescription({ role }: { role: UserRole }) {
  const descriptions = {
    [UserRole.REQUESTER]:
      "–ú–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–º–æ–Ω—Ç –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏—Ö —Å—Ç–∞—Ç—É—Å",
    [UserRole.TECHNICIAN]:
      "–ü–æ–ª—É—á–∞–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏, –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç",
    [UserRole.MANAGER]:
      "–£–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫–∞–º–∏, –Ω–∞–∑–Ω–∞—á–∞–µ—Ç —Ç–µ—Ö–Ω–∏–∫–æ–≤, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
    [UserRole.SUPER_ADMIN]: "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã",
  };

  const icons = {
    [UserRole.REQUESTER]: User,
    [UserRole.TECHNICIAN]: Wrench,
    [UserRole.MANAGER]: Users,
    [UserRole.SUPER_ADMIN]: UserCheck,
  };

  const Icon = icons[role];

  return (
    <div className="flex items-start gap-1">
      <Icon className="h-3 w-3 mt-0.5 flex-shrink-0" />
      <span>{descriptions[role]}</span>
    </div>
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–æ–ª–µ–π
function getRoleDisplayName(role: UserRole): string {
  const names = {
    [UserRole.REQUESTER]: "–ó–∞—è–≤–∏—Ç–µ–ª—å",
    [UserRole.TECHNICIAN]: "–¢–µ—Ö–Ω–∏–∫",
    [UserRole.MANAGER]: "–ú–µ–Ω–µ–¥–∂–µ—Ä",
    [UserRole.SUPER_ADMIN]: "–°—É–ø–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
  };
  return names[role];
}

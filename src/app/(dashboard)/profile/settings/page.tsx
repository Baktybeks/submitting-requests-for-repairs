// src/app/(dashboard)/profile/settings/page.tsx

"use client";

import React, { useState } from "react";
import { useAuth } from "@/hooks/useAuth";
import { ChangePasswordModal } from "@/components/profile/ChangePasswordModal";
import { toast } from "react-toastify";
import {
  Settings,
  Bell,
  Moon,
  Globe,
  Shield,
  Download,
  Trash2,
  AlertTriangle,
  Save,
  ArrowLeft,
  Lock,
  Mail,
  Smartphone,
  Eye,
  Clock,
} from "lucide-react";
import Link from "next/link";

interface NotificationSettings {
  emailNotifications: boolean;
  requestUpdates: boolean;
  systemUpdates: boolean;
  weeklyReports: boolean;
  pushNotifications: boolean;
  smsNotifications: boolean;
}

interface PrivacySettings {
  profileVisibility: "public" | "team" | "private";
  showEmail: boolean;
  showPhone: boolean;
  allowDirectMessages: boolean;
  activityTracking: boolean;
}

interface AppearanceSettings {
  theme: "light" | "dark" | "system";
  language: "ru" | "en";
  timezone: string;
  dateFormat: "DD.MM.YYYY" | "MM/DD/YYYY" | "YYYY-MM-DD";
  timeFormat: "24h" | "12h";
}

export default function ProfileSettingsPage() {
  const { user } = useAuth();
  const [isPasswordModalOpen, setIsPasswordModalOpen] = useState(false);
  const [hasChanges, setHasChanges] = useState(false);

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const [notifications, setNotifications] = useState<NotificationSettings>({
    emailNotifications: true,
    requestUpdates: true,
    systemUpdates: false,
    weeklyReports: true,
    pushNotifications: false,
    smsNotifications: false,
  });

  const [privacy, setPrivacy] = useState<PrivacySettings>({
    profileVisibility: "team",
    showEmail: false,
    showPhone: false,
    allowDirectMessages: true,
    activityTracking: true,
  });

  const [appearance, setAppearance] = useState<AppearanceSettings>({
    theme: "system",
    language: "ru",
    timezone: "Europe/Moscow",
    dateFormat: "DD.MM.YYYY",
    timeFormat: "24h",
  });

  if (!user) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600"></div>
      </div>
    );
  }

  const handleNotificationChange = (key: keyof NotificationSettings) => {
    setNotifications((prev) => ({ ...prev, [key]: !prev[key] }));
    setHasChanges(true);
  };

  const handlePrivacyChange = (key: keyof PrivacySettings, value: any) => {
    setPrivacy((prev) => ({ ...prev, [key]: value }));
    setHasChanges(true);
  };

  const handleAppearanceChange = (
    key: keyof AppearanceSettings,
    value: any
  ) => {
    setAppearance((prev) => ({ ...prev, [key]: value }));
    setHasChanges(true);
  };

  const handleSaveSettings = async () => {
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
      // await saveUserSettings({ notifications, privacy, appearance });

      toast.success("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!", {
        position: "top-right",
        autoClose: 3000,
      });
      setHasChanges(false);
    } catch (error: any) {
      toast.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: ${error.message}`, {
        position: "top-center",
        autoClose: 5000,
      });
    }
  };

  const handleExportData = () => {
    // –õ–æ–≥–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    toast.info("üì¶ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–∞—á–∞—Ç. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª –Ω–∞ email.", {
      position: "top-right",
      autoClose: 5000,
    });
  };

  const handleDeleteAccount = () => {
    const confirmed = confirm(
      "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!"
    );

    if (confirmed) {
      toast.error(
        "üö´ –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
        {
          position: "top-center",
          autoClose: 5000,
        }
      );
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between py-6">
            <div className="flex items-center">
              <Link
                href="/profile"
                className="mr-4 p-2 text-gray-400 hover:text-gray-600 transition-colors"
              >
                <ArrowLeft className="h-5 w-5" />
              </Link>
              <div>
                <h1 className="text-2xl font-bold text-gray-900 flex items-center">
                  <Settings className="h-6 w-6 mr-3 text-indigo-600" />
                  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
                </h1>
                <p className="text-sm text-gray-600 mt-1">
                  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏, –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å—é –∏ –≤–Ω–µ—à–Ω–∏–º –≤–∏–¥–æ–º
                </p>
              </div>
            </div>
            {hasChanges && (
              <button
                onClick={handleSaveSettings}
                className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors"
              >
                <Save className="h-4 w-4 mr-2" />
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
              </button>
            )}
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="space-y-8">
          {/* –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å */}
          <div className="bg-white rounded-lg shadow-md overflow-hidden">
            <div className="px-6 py-4 border-b border-gray-200">
              <h3 className="text-lg font-medium text-gray-900 flex items-center">
                <Shield className="h-5 w-5 mr-2 text-gray-600" />
                –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
              </h3>
              <p className="text-sm text-gray-600 mt-1">
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
              </p>
            </div>
            <div className="px-6 py-4">
              <div className="space-y-4">
                <button
                  onClick={() => setIsPasswordModalOpen(true)}
                  className="w-full text-left px-4 py-3 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center">
                      <Lock className="h-5 w-5 text-gray-400 mr-3" />
                      <div>
                        <p className="text-sm font-medium text-gray-900">
                          –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
                        </p>
                        <p className="text-xs text-gray-500">
                          –û–±–Ω–æ–≤–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                        </p>
                      </div>
                    </div>
                    <ArrowLeft className="h-4 w-4 text-gray-400 rotate-180" />
                  </div>
                </button>

                <div className="px-4 py-3 bg-gray-50 rounded-md">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center">
                      <Clock className="h-5 w-5 text-gray-400 mr-3" />
                      <div>
                        <p className="text-sm font-medium text-gray-900">
                          –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥
                        </p>
                        <p className="text-xs text-gray-500">
                          –°–µ–≥–æ–¥–Ω—è –≤ 14:30 —Å IP 192.168.1.1
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
          <div className="bg-white rounded-lg shadow-md overflow-hidden">
            <div className="px-6 py-4 border-b border-gray-200">
              <h3 className="text-lg font-medium text-gray-900 flex items-center">
                <Bell className="h-5 w-5 mr-2 text-gray-600" />
                –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
              </h3>
              <p className="text-sm text-gray-600 mt-1">
                –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
              </p>
            </div>
            <div className="px-6 py-4">
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center">
                    <Mail className="h-5 w-5 text-gray-400 mr-3" />
                    <div>
                      <p className="text-sm font-medium text-gray-900">
                        Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                      </p>
                      <p className="text-xs text-gray-500">
                        –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ email
                      </p>
                    </div>
                  </div>
                  <button
                    onClick={() =>
                      handleNotificationChange("emailNotifications")
                    }
                    className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 ${
                      notifications.emailNotifications
                        ? "bg-indigo-600"
                        : "bg-gray-200"
                    }`}
                  >
                    <span
                      className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${
                        notifications.emailNotifications
                          ? "translate-x-5"
                          : "translate-x-0"
                      }`}
                    />
                  </button>
                </div>

                <div className="flex items-center justify-between">
                  <div className="flex items-center">
                    <Bell className="h-5 w-5 text-gray-400 mr-3" />
                    <div>
                      <p className="text-sm font-medium text-gray-900">
                        –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–æ–∫
                      </p>
                      <p className="text-xs text-gray-500">
                        –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–æ–∫
                      </p>
                    </div>
                  </div>
                  <button
                    onClick={() => handleNotificationChange("requestUpdates")}
                    className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 ${
                      notifications.requestUpdates
                        ? "bg-indigo-600"
                        : "bg-gray-200"
                    }`}
                  >
                    <span
                      className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${
                        notifications.requestUpdates
                          ? "translate-x-5"
                          : "translate-x-0"
                      }`}
                    />
                  </button>
                </div>

                <div className="flex items-center justify-between">
                  <div className="flex items-center">
                    <Smartphone className="h-5 w-5 text-gray-400 mr-3" />
                    <div>
                      <p className="text-sm font-medium text-gray-900">
                        Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                      </p>
                      <p className="text-xs text-gray-500">
                        –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
                      </p>
                    </div>
                  </div>
                  <button
                    onClick={() =>
                      handleNotificationChange("pushNotifications")
                    }
                    className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 ${
                      notifications.pushNotifications
                        ? "bg-indigo-600"
                        : "bg-gray-200"
                    }`}
                  >
                    <span
                      className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${
                        notifications.pushNotifications
                          ? "translate-x-5"
                          : "translate-x-0"
                      }`}
                    />
                  </button>
                </div>

                <div className="flex items-center justify-between">
                  <div className="flex items-center">
                    <Bell className="h-5 w-5 text-gray-400 mr-3" />
                    <div>
                      <p className="text-sm font-medium text-gray-900">
                        –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã
                      </p>
                      <p className="text-xs text-gray-500">
                        –°–≤–æ–¥–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é
                      </p>
                    </div>
                  </div>
                  <button
                    onClick={() => handleNotificationChange("weeklyReports")}
                    className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 ${
                      notifications.weeklyReports
                        ? "bg-indigo-600"
                        : "bg-gray-200"
                    }`}
                  >
                    <span
                      className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${
                        notifications.weeklyReports
                          ? "translate-x-5"
                          : "translate-x-0"
                      }`}
                    />
                  </button>
                </div>
              </div>
            </div>
          </div>

          {/* –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å */}
          <div className="bg-white rounded-lg shadow-md overflow-hidden">
            <div className="px-6 py-4 border-b border-gray-200">
              <h3 className="text-lg font-medium text-gray-900 flex items-center">
                <Eye className="h-5 w-5 mr-2 text-gray-600" />
                –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å
              </h3>
              <p className="text-sm text-gray-600 mt-1">
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç—å—é –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
              </p>
            </div>
            <div className="px-6 py-4">
              <div className="space-y-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è
                  </label>
                  <select
                    value={privacy.profileVisibility}
                    onChange={(e) =>
                      handlePrivacyChange("profileVisibility", e.target.value)
                    }
                    className="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                  >
                    <option value="public">–ü—É–±–ª–∏—á–Ω—ã–π</option>
                    <option value="team">–¢–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥–∞</option>
                    <option value="private">–ü—Ä–∏–≤–∞—Ç–Ω—ã–π</option>
                  </select>
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm font-medium text-gray-900">
                      –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å email –≤ –ø—Ä–æ—Ñ–∏–ª–µ
                    </p>
                    <p className="text-xs text-gray-500">
                      –î—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å –≤–∞—à email
                    </p>
                  </div>
                  <button
                    onClick={() =>
                      handlePrivacyChange("showEmail", !privacy.showEmail)
                    }
                    className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 ${
                      privacy.showEmail ? "bg-indigo-600" : "bg-gray-200"
                    }`}
                  >
                    <span
                      className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${
                        privacy.showEmail ? "translate-x-5" : "translate-x-0"
                      }`}
                    />
                  </button>
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm font-medium text-gray-900">
                      –†–∞–∑—Ä–µ—à–∏—Ç—å –ø—Ä—è–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                    </p>
                    <p className="text-xs text-gray-500">
                      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                    </p>
                  </div>
                  <button
                    onClick={() =>
                      handlePrivacyChange(
                        "allowDirectMessages",
                        !privacy.allowDirectMessages
                      )
                    }
                    className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 ${
                      privacy.allowDirectMessages
                        ? "bg-indigo-600"
                        : "bg-gray-200"
                    }`}
                  >
                    <span
                      className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${
                        privacy.allowDirectMessages
                          ? "translate-x-5"
                          : "translate-x-0"
                      }`}
                    />
                  </button>
                </div>
              </div>
            </div>
          </div>

          {/* –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ */}
          <div className="bg-white rounded-lg shadow-md overflow-hidden">
            <div className="px-6 py-4 border-b border-gray-200">
              <h3 className="text-lg font-medium text-gray-900 flex items-center">
                <Moon className="h-5 w-5 mr-2 text-gray-600" />
                –í–Ω–µ—à–Ω–∏–π –≤–∏–¥
              </h3>
              <p className="text-sm text-gray-600 mt-1">
                –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã, —è–∑—ã–∫–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤
              </p>
            </div>
            <div className="px-6 py-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
                  </label>
                  <select
                    value={appearance.theme}
                    onChange={(e) =>
                      handleAppearanceChange("theme", e.target.value)
                    }
                    className="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                  >
                    <option value="light">–°–≤–µ—Ç–ª–∞—è</option>
                    <option value="dark">–¢–µ–º–Ω–∞—è</option>
                    <option value="system">–°–∏—Å—Ç–µ–º–Ω–∞—è</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
                  </label>
                  <select
                    value={appearance.language}
                    onChange={(e) =>
                      handleAppearanceChange("language", e.target.value)
                    }
                    className="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                  >
                    <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                    <option value="en">English</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
                  </label>
                  <select
                    value={appearance.dateFormat}
                    onChange={(e) =>
                      handleAppearanceChange("dateFormat", e.target.value)
                    }
                    className="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                  >
                    <option value="DD.MM.YYYY">–î–î.–ú–ú.–ì–ì–ì–ì</option>
                    <option value="MM/DD/YYYY">–ú–ú/–î–î/–ì–ì–ì–ì</option>
                    <option value="YYYY-MM-DD">–ì–ì–ì–ì-–ú–ú-–î–î</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏
                  </label>
                  <select
                    value={appearance.timeFormat}
                    onChange={(e) =>
                      handleAppearanceChange("timeFormat", e.target.value)
                    }
                    className="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                  >
                    <option value="24h">24-—á–∞—Å–æ–≤–æ–π</option>
                    <option value="12h">12-—á–∞—Å–æ–≤–æ–π</option>
                  </select>
                </div>
              </div>
            </div>
          </div>

          {/* –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ */}
          <div className="bg-white rounded-lg shadow-md overflow-hidden">
            <div className="px-6 py-4 border-b border-gray-200">
              <h3 className="text-lg font-medium text-gray-900 flex items-center">
                <Download className="h-5 w-5 mr-2 text-gray-600" />
                –î–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞
              </h3>
              <p className="text-sm text-gray-600 mt-1">
                –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º
              </p>
            </div>
            <div className="px-6 py-4">
              <div className="space-y-4">
                <button
                  onClick={handleExportData}
                  className="w-full text-left px-4 py-3 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center">
                      <Download className="h-5 w-5 text-gray-400 mr-3" />
                      <div>
                        <p className="text-sm font-medium text-gray-900">
                          –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
                        </p>
                        <p className="text-xs text-gray-500">
                          –°–∫–∞—á–∞—Ç—å –∫–æ–ø–∏—é –≤—Å–µ—Ö –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
                        </p>
                      </div>
                    </div>
                    <ArrowLeft className="h-4 w-4 text-gray-400 rotate-180" />
                  </div>
                </button>

                <div className="border-t border-gray-200 pt-4">
                  <div className="bg-red-50 border border-red-200 rounded-md p-4">
                    <div className="flex items-start">
                      <AlertTriangle className="h-5 w-5 text-red-500 mt-0.5 mr-3" />
                      <div className="flex-1">
                        <h4 className="text-sm font-medium text-red-800 mb-2">
                          –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞
                        </h4>
                        <p className="text-sm text-red-700 mb-3">
                          –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ. –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç
                          —É–¥–∞–ª–µ–Ω—ã –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.
                        </p>
                        <button
                          onClick={handleDeleteAccount}
                          className="inline-flex items-center px-3 py-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-red-50 hover:bg-red-100 transition-colors"
                        >
                          <Trash2 className="h-4 w-4 mr-2" />
                          –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è */}
      <ChangePasswordModal
        isOpen={isPasswordModalOpen}
        onClose={() => setIsPasswordModalOpen(false)}
      />
    </div>
  );
}

// src/hooks/useAuth.ts (–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)

import { useAuthStore } from "@/store/authStore";
import {
  useCurrentUser,
  useLogin,
  useLogout,
  useRegister,
  usePermissions,
} from "@/services/authService";
import { useEffect, useCallback } from "react";
import { toast } from "react-toastify";
import { UserRole } from "@/types";

// –¢–∏–ø—ã –¥–ª—è —Ö—É–∫–∞
interface AuthHookReturn {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  user: any;
  loading: boolean;
  error: string | null;
  isAuthenticated: boolean;
  isActive: boolean;

  // –î–µ–π—Å—Ç–≤–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  login: (email: string, password: string) => Promise<any>;
  logout: () => Promise<void>;
  register: (
    name: string,
    email: string,
    password: string,
    role: UserRole,
    specialization?: string,
    phone?: string
  ) => Promise<any>;
  clearError: () => void;

  // –°—Ç–∞—Ç—É—Å—ã –æ–ø–µ—Ä–∞—Ü–∏–π
  isLoggingIn: boolean;
  isLoggingOut: boolean;
  isRegistering: boolean;
  isCheckingAuth: boolean;

  // –ü—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π
  isSuper: boolean;
  isManager: boolean;
  isTechnician: boolean;
  isRequester: boolean;

  // –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
  canManageUsers: boolean;
  canManageRequests: boolean;
  canAssignTechnicians: boolean;
  canViewAllRequests: boolean;
  canCreateRequests: boolean;
  canUpdateRequestStatus: boolean;
}

// –§—É–Ω–∫—Ü–∏—è-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–∞
const isNotActivatedUser = (user: any): user is { notActivated: true } => {
  return (
    user !== null &&
    user !== undefined &&
    typeof user === "object" &&
    "notActivated" in user
  );
};

const isValidUser = (user: any): boolean => {
  return (
    user !== null &&
    user !== undefined &&
    typeof user === "object" &&
    !("notActivated" in user)
  );
};

export function useAuth(): AuthHookReturn {
  const { user, setUser, clearUser } = useAuthStore();

  // React Query —Ö—É–∫–∏
  const {
    data: currentUser,
    isLoading: isCheckingAuth,
    error: authError,
    refetch: refetchCurrentUser, // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
  } = useCurrentUser();

  const loginMutation = useLogin();
  const logoutMutation = useLogout();
  const registerMutation = useRegister();
  const permissions = usePermissions();

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è Zustand —Å React Query
  useEffect(() => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ currentUser –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º
      if (isValidUser(currentUser)) {
        setUser(currentUser);
      } else if (
        currentUser === null ||
        currentUser === undefined ||
        isNotActivatedUser(currentUser)
      ) {
        clearUser();
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
      clearUser();
    }
  }, [currentUser, setUser, clearUser]);

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  const login = useCallback(
    async (email: string, password: string) => {
      try {
        const user = await loginMutation.mutateAsync({ email, password });
        setUser(user);
        return user;
      } catch (error: any) {
        clearUser();

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤—Ö–æ–¥–∞
        const message = error?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ";

        if (
          message.includes("–Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω") ||
          message.includes("not activated")
        ) {
          // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º toast –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤,
          // —ç—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
        } else if (
          message.includes("–ù–µ–≤–µ—Ä–Ω—ã–π") ||
          message.includes("Invalid")
        ) {
          toast.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å", {
            position: "top-center",
            autoClose: 4000,
          });
        } else {
          toast.error(`‚ùå ${message}`, {
            position: "top-center",
            autoClose: 5000,
          });
        }

        throw error;
      }
    },
    [loginMutation, setUser, clearUser]
  );

  const logout = useCallback(async () => {
    try {
      await logoutMutation.mutateAsync();
      clearUser();
      toast.success("üëã –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã", {
        position: "top-right",
        autoClose: 3000,
      });
    } catch (error: any) {
      // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –æ—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      clearUser();
      console.warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ, –Ω–æ —Å–µ—Å—Å–∏—è –æ—á–∏—â–µ–Ω–∞:", error);
      toast.warning("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ, –Ω–æ —Å–µ—Å—Å–∏—è –æ—á–∏—â–µ–Ω–∞", {
        position: "top-right",
        autoClose: 4000,
      });
      throw error;
    }
  }, [logoutMutation, clearUser]);

  const register = useCallback(
    async (
      name: string,
      email: string,
      password: string,
      role: UserRole,
      specialization?: string,
      phone?: string
    ) => {
      try {
        const result = await registerMutation.mutateAsync({
          name,
          email,
          password,
          role,
          specialization,
          phone,
        });

        // –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (—Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω), –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º
        if (result.isFirstUser) {
          setUser(result.user);
        }

        return result;
      } catch (error: any) {
        // –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        const message = error?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏";

        if (
          message.includes("—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç") ||
          message.includes("already exists")
        ) {
          toast.error("üìß –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω", {
            position: "top-center",
            autoClose: 5000,
          });
        } else if (message.includes("–ø–∞—Ä–æ–ª—å") || message.includes("password")) {
          toast.error("üîí –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤", {
            position: "top-center",
            autoClose: 5000,
          });
        } else if (message.includes("email") || message.includes("Email")) {
          toast.error("üìß –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email –∞–¥—Ä–µ—Å–∞", {
            position: "top-center",
            autoClose: 5000,
          });
        } else {
          toast.error(`‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${message}`, {
            position: "top-center",
            autoClose: 5000,
          });
        }

        throw error;
      }
    },
    [registerMutation, setUser]
  );

  const clearError = useCallback(() => {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –º—É—Ç–∞—Ü–∏–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    loginMutation.reset();
    logoutMutation.reset();
    registerMutation.reset();
  }, [loginMutation, logoutMutation, registerMutation]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  useEffect(() => {
    if (authError && !isCheckingAuth) {
      console.error("–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:", authError);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö
      if (authError.message && !authError.message.includes("401")) {
        toast.error("üîê –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ", {
          position: "top-center",
          autoClose: 5000,
        });
      }
    }
  }, [authError, isCheckingAuth]);

  // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const isAuthenticated = !!user;
  const isActive = user?.isActive === true;
  const loading =
    isCheckingAuth ||
    loginMutation.isPending ||
    logoutMutation.isPending ||
    registerMutation.isPending;

  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
  const error =
    authError?.message ||
    loginMutation.error?.message ||
    logoutMutation.error?.message ||
    registerMutation.error?.message ||
    null;

  // –ü—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π
  const isSuper = user?.role === UserRole.SUPER_ADMIN;
  const isManager = user?.role === UserRole.MANAGER;
  const isTechnician = user?.role === UserRole.TECHNICIAN;
  const isRequester = user?.role === UserRole.REQUESTER;

  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user,
    loading,
    error,
    isAuthenticated,
    isActive,

    // –î–µ–π—Å—Ç–≤–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    login,
    logout,
    register,
    clearError,

    // –°—Ç–∞—Ç—É—Å—ã –æ–ø–µ—Ä–∞—Ü–∏–π
    isLoggingIn: loginMutation.isPending,
    isLoggingOut: logoutMutation.isPending,
    isRegistering: registerMutation.isPending,
    isCheckingAuth,

    // –ü—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π
    isSuper,
    isManager,
    isTechnician,
    isRequester,

    // –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (–∏–∑ usePermissions)
    canManageUsers: permissions.canManageUsers,
    canManageRequests: permissions.canManageRequests,
    canAssignTechnicians: permissions.canAssignTechnicians,
    canViewAllRequests: permissions.canViewAllRequests,
    canCreateRequests: permissions.canCreateRequests,
    canUpdateRequestStatus: permissions.canUpdateRequestStatus,
  };
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—É–∫–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞

// –•—É–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–æ–ª–∏
export function useRole(requiredRole: UserRole): boolean {
  const { user } = useAuth();
  return user?.role === requiredRole;
}

// –•—É–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–æ–ª–µ–π
export function useRoles(allowedRoles: UserRole[]): boolean {
  const { user } = useAuth();
  return user ? allowedRoles.includes(user.role) : false;
}

// –•—É–∫ –¥–ª—è –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
export function useProtectedAction(
  requiredPermission: keyof ReturnType<typeof usePermissions>
) {
  const permissions = usePermissions();

  return useCallback(
    (action: () => void | Promise<void>) => {
      if (permissions[requiredPermission]) {
        return action();
      } else {
        toast.error("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è", {
          position: "top-center",
          autoClose: 4000,
        });
      }
    },
    [permissions, requiredPermission]
  );
}

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –•—É–∫ –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
export function useAuthRefresh() {
  const { data: currentUser, refetch: refetchCurrentUser } = useCurrentUser(); // –ò–°–ü–†–ê–í–õ–ï–ù–û

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏—é –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
    const interval = setInterval(() => {
      refetchCurrentUser();
    }, 15 * 60 * 1000);

    return () => clearInterval(interval);
  }, [refetchCurrentUser]); // –ò–°–ü–†–ê–í–õ–ï–ù–û
}

// –•—É–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
export function useIdleTimer(
  onIdle: () => void,
  timeoutMs: number = 30 * 60 * 1000
) {
  const { isAuthenticated } = useAuth();

  useEffect(() => {
    if (!isAuthenticated) return;

    let timeoutId: NodeJS.Timeout;

    const resetTimer = () => {
      clearTimeout(timeoutId);
      timeoutId = setTimeout(onIdle, timeoutMs);
    };

    const events = [
      "mousedown",
      "mousemove",
      "keypress",
      "scroll",
      "touchstart",
    ];

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä
    resetTimer();

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π
    events.forEach((event) => {
      document.addEventListener(event, resetTimer, true);
    });

    return () => {
      clearTimeout(timeoutId);
      events.forEach((event) => {
        document.removeEventListener(event, resetTimer, true);
      });
    };
  }, [isAuthenticated, onIdle, timeoutMs]);
}

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –•—É–∫ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å—Ç–∞—Ç—É—Å–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
export function useAuthNotifications() {
  const { isAuthenticated, user } = useAuth();

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    if (typeof window === "undefined") return;

    if (isAuthenticated && user) {
      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –≤—Ö–æ–¥–µ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ)
      const hasShownWelcome = sessionStorage.getItem("auth_welcome_shown");
      if (!hasShownWelcome) {
        toast.success(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${user.name}!`, {
          position: "top-right",
          autoClose: 3000,
        });
        sessionStorage.setItem("auth_welcome_shown", "true");
      }
    } else {
      // –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
      sessionStorage.removeItem("auth_welcome_shown");
    }
  }, [isAuthenticated, user]);
}
